# To get started rename this file to keybinds.knst
# At any point if you do [[reloadKeybinds]] macros will reload, regardless of the keybinds. This will apply changes from this file.

# ------------------------------------
# To create a new keybind write at least 5 -'s in a row (i.e. -----)
# This is written in Konstruct. Look at https://darkkronicle.github.io/Konstruct/ for more information

# You have to specify one variable, keys that will trigger this. Keys can be separated by ,'s and should be upper case.

# Comments can be written inline using # comment or at the start of the line like this section.

# ----- Quick reference -----
# replace(pattern, {input}, replaceTo, [replaceType])
# isMatch(pattern, {input}, [replaceType])
# <variable> = <value>
# <variable>
# # comment - line comment
# #| comment |#
# ;'s will nullify any statement
# ---- Custom Functions -----
# sendCommand(command) - Executes a command/chat message
# copy(contents) - Copies something to clipboard
# suggestCommand(command) - Opens chat with 'command' as the current message
# sendInfo(message) - Sends a message directly to chat
# ready - If it's ready to execute. This will be false if keybinds are being reloaded.
# ----- Keybind Settings -----
# keys - Keys to activate separated by commas. Values can be anything from: https://github.com/DarkKronicle/AdvancedChatMacros/wiki/Keybind-Keys
# ------ Boolean values ( or false)
# https://github.com/maruohon/malilib/blob/fabric_1.18.x/src/main/resources/assets/malilib/lang/en_us.json#L2-L8
# cancel - When activated should it cancel the action. Default true
# orderSensitive - Does the order of the key presses matter. Default true
# exclusive - If true, then no other keybinds can have
#             been activated before the keybind in question.
#             This check resets when all keys are released. Default false
# allowExtra - Allows extra keys. Default true

orderSensitive = false;
allowExtra = true;
keys = 'I,K';
executeCommand('/gamemode creative');

-----

orderSensitive = false;
allowExtra = true;
keys = 'I,U';
executeCommand('/gamemode survival');

-----

orderSensitive = false;
allowExtra = true;
keys = 'I,O';
executeCommand('/gamemode spectator');

-----

keys = 'M';
# Example of something not triggering until everything is ready. This helps prevent some edge cases.
if(ready) {
    suggestCommand('/message ')
}

-----

allowExtra = false;
keys = 'Y';
copy(time('hh:mm:ss'));